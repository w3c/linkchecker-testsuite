This small test suite has been built to test the link checkers at W3C, 
but could be used for any tool used to either check links in HTML documents, 
spiders, or miscellaneous Web User-Agents.

This test suite is work in progress. 
Please submit any issue or idea to the public mailing-list public-qa-dev@w3.org

*** Adding a test case ***

- add the test metadata file to one of the collections in harness/testcases/*
- refer to the test metadata file in the collection index 
- TODO regenerate the documentation with `./harness/linktest.py doc`


*** Running the test suite ***

Run the harness as:
./harness/linktest.py [-v|-q] run

If any change is made to the code, make sure it has unit tests and check sanity with:
./harness/linktest.py -v sanity




===== below are test cases TBA =====


** Collection: attribute values set to %URI type in HTML 4.01 **


	
html-18) IMG usemap dereferences
    EXPECTED: link checker finds no error

html-18b) IMG usemap 404
	EXPECTED: link checker throws error

html-11) AREA href dereferences
    EXPECTED: link checker finds no error

html-11b) AREA href 404
	EXPECTED: link checker throws error



html-24) object data dereferences
    EXPECTED: link checker finds no error

html-24b) object data 404
	EXPECTED: link checker throws error

html-25) object classid dereferences
    EXPECTED: link checker finds no error

html-25b) object classid 404
	EXPECTED: link checker throws error

html-26) object codebase dereferences
    EXPECTED: link checker finds no error

html-26b) object codebase 404
	EXPECTED: link checker throws error

html-27) applet codebase dereferences
    EXPECTED: link checker finds no error

html-27b) applet codebase 404
	EXPECTED: link checker throws error


html-29) INPUT usemap dereferences
    EXPECTED: link checker finds no error

html-29b) INPUT usemap 404
	EXPECTED: link checker throws error

html-30) OBJECT usemap dereferences
    EXPECTED: link checker finds no error

html-30b) OBJECT usemap 404
	EXPECTED: link checker throws error

TBD form action too? only if method is GET? Or too dangerous given too many cuap CGIs?


** Collection: Robots exclusion prototol ***

robots-1) link to resource in area forbidden by ROBOTS.txt but 404
    EXPECTED: link checker follows link, throws error

robots-2) link to resource in area forbidden by ROBOTS.txt, which links to a 404 resource
    EXPECTED: link checker follows link, does not throw error even in recursive mode, but gives a warning

*** Collection URI schemes ***

http
mailto
news
urn
ftp
gopher
...